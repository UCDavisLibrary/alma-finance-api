<script>
  const toggle = (input) => {
    let thisid = input.id;
    const mydiv = document.getElementById(thisid).classList;
    console.log(thisid);
    mydiv.toggle('hidden');
    mydiv.toggle('visible');
  };

  const checkall = (source) => {
    checkboxes = document.querySelectorAll('input[type=checkbox]')
    for(var i=0, n=checkboxes.length;i<n;i++) {
      checkboxes[i].checked = source.checked;
    }
    document.getElementById('total2').classList.toggle('hidden');
    document.getElementById('totalcontainer').classList.toggle('hidden');
  }

  const output = document.getElementById('total');

  const distribution = document.getElementById('fundCodes');

  output.textContent = 0;

  const totalPrice = () => [...document.querySelectorAll('input[type=checkbox]:checked')]
  .reduce((acc, {
    dataset: {
      price
    }
  }) => acc + +price, 0);


const totalDistribution = () => {
 let fundArray = [];
 let fundCodes = [];

 let arr = [...document.querySelectorAll('input[type=checkbox]:checked')]
.map(({
  dataset: {
    fund,
    fundamount
  }
}) => 
  {
    return {fund: fund, amount: fundamount}    
  });


  arr.forEach((fund) => {
    if (fundCodes.includes(fund.fund)) {
      fundArray.forEach((fundA) => {
          fundA.fundamount.push(fund.amount);
          let total = fundA.fundamount.reduce((a, b) => a + +b, 0);
          fundA.fundamount = [total];
      });
    }
    else {
      fundArray.push({fund: fund.fund,
        fundamount: [fund.amount]});
      fundCodes.push(fund.fund);
    }
  })

  return fundArray.map((fund) => {
    if (fund.fund !== undefined) {
      return `${fund.fund}: $${fund.fundamount}</br>`;
    }
  }).join('');


  }


document.getElementById('marksdatatable').addEventListener('change', () => output.textContent = totalPrice());
document.getElementById('marksdatatable').addEventListener('change', () => distribution.innerHTML = totalDistribution());


</script>
